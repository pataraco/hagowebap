---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates an AWS CodePipeline Pipeline from a GitHub source and triggered by pushes to the branch'


Parameters:

  ArtifactsEncryptionKeyId:
    Default: ''
    Description: 'The encryption key used to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon S3 is used'
    Type: String

  ArtifactsBucket:
    Default: ''
    Description: 'The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify the name of an S3 bucket but not a folder in the bucket. A folder to contain the pipeline artifacts is created for you based on the name of the pipeline. You can use any Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline artifacts'
    Type: String

  RestartExecutionOnUpdate:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: 'Indicates whether to rerun the CodePipeline pipeline after you update it (default: false)'
    Type: String

  ManagedPolicyArn:
    Description: 'The Amazon Resource Name (ARN) of the managed policy to attach to the IAM Role for AWS CodePipeline to use to either perform actions with no actionRoleArn, or to use to assume roles for actions with an actionRoleArn'
    Type: String

  Environment:
    Description: 'Name of Environment'
    Type: String

  Name:
    AllowedPattern: '[A-Za-z0-9.@\-_]+'
    Default: 'not-given'
    Description: 'The name of the pipeline'
    MinLength: 1
    MaxLength: 100
    Type: String

  Project:
    Default: ''
    Description: 'Name of the project being deployed'
    Type: String


Conditions:

  ArtifactEncryptionKey: !Not [!Equals [!Ref ArtifactsEncryptionKeyId, '']]
  ArtifactsBucketNotSpecified: !Equals [!Ref ArtifactsBucket, '']
  BuildSpecGiven: !Not [!Equals [!Ref BuildSpec, '']]
  PipelineNameGiven: !Not [!Equals [!Ref Name, 'not-given']]
  SourceVersionGiven: !Not [!Equals [!Ref SourceVersion, '']]


Resources:

  S3BucketCodePipelineArtifacts:
    Type: AWS::S3::Bucket
    Condition: ArtifactsBucketNotSpecified

  IamRoleCodePipelineService:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal: {Service: 'codepipeline.amazonaws.com'}
      ManagedPolicyArns:
        - !Ref ManagedPolicyArn
      Description: !Sub 'Allows CodeBuild to build/deploy resources for ${Project} ${Environment}'
      RoleName: !If
        - PipelineNameGiven
        - !Sub 'codebuild-${Name}-service-role'
        - !Sub 'codebuild-${Project}-${Environment}-service-role'

  CodePipelinePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        EncryptionKey: !If
          - ArtifactEncryptionKey
          - {Id: !Ref ArtifactsEncryptionKeyId, Type: KMS}
          - !Ref 'AWS::NoValue'
        Location: !Ref ArtifactsBucket
        Location: !If
          - ArtifactsBucketNotSpecified
          - !Ref S3BucketCodePipelineArtifacts
          - !Ref ArtifactsBucket
        Type: S3
      Name: !If [PipelineNameGiven, !Ref Name, !Sub '${Project}-${Environment}']
      RestartExecutionOnUpdate: !Ref RestartExecutionOnUpdate
      RoleArn: !Ref IamRoleCodePipelineService
      # TODO: complete the Stages
      Stages: 
        - Name: Source
          Actions: 
            - ActionTypeId: 
                Category: Source
                Owner: String
                Provider: GitHub
                Version: String
              Configuration: Json
              InputArtifacts: 
                - InputArtifact
              Name: String
              Namespace: String
              OutputArtifacts: 
                - OutputArtifact
              Region: String
              RoleArn: String
              RunOrder: Integer
        - Name: Build
          Actions: 
            - ActionTypeId: 
                Category: Source
                Owner: String
                Provider: GitHub
                Version: String
              Configuration: Json
              InputArtifacts: 
                - InputArtifact
              Name: String
              Namespace: String
              OutputArtifacts: 
                - OutputArtifact
              Region: String
              RoleArn: String
              RunOrder: Integer
      Tags: 
        - Key: Name
          Value: !If [PipelineNameGiven, !Ref Name, !Sub '${Project}-${Environment}']
        # TODO: test: maybe CloudFormation tags aren't propagated for this resource type
        # - {Key: Project, Value: !Ref Project}
        # - {Key: Environment, Value: !Ref Environment}
        # - {Key: Provisioner, Value: CloudFormation}


Outputs:

  CodePipelineName:
    Description: 'The name of the CodePipeline Pipeline'
    Export: {'Name': !Sub '${AWS::StackName}-CodePipelineName'}
    Value: !Ref CodePipelinePipeline

  CodePipelineVersion:
    Description: 'The version of the CodePipeline Pipeline'
    Export: {'Name': !Sub '${AWS::StackName}-CodePipelineVersion'}
    Value: !GetAtt CodePipelinePipeline.Version
